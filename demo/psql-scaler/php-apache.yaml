---
apiVersion: v1
kind: Secret
metadata:
  name: psql-secret
  namespace: psql-scaler
data:
  PSQL_CONN_STRING: "cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBvc3RncmVzQHBzcWwtc2NhbGVyLnBzcWwtc2NhbGVyLnN2Yy5jbHVzdGVyLmxvY2FsOjU0MzIvZHZkcmVudGFs" # connect to sample db - don't ever git track real creds
  POSTGRES_USER: "UE9TVEdSRVNfVVNFUg=="
  POSTGRES_PASSWORD: "UE9TVEdSRVNfVVNFUg=="
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-apache
  namespace: psql-scaler
spec:
  selector:
    matchLabels:
      run: php-apache
  template:
    metadata:
      labels:
        run: php-apache
    spec:
      containers:
      - name: php-apache
        image: registry.k8s.io/hpa-example
        ports:
        - containerPort: 80
        env:
        - name: PSQL_CONN_STRING
          valueFrom:
            secretKeyRef:
              name: psql-secret
              key: PSQL_CONN_STRING
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: psql-host
  namespace: psql-scaler
spec:
  selector:
    matchLabels:
      run: psql-host
  template:
    metadata:
      labels:
        run: psql-host
    spec:
      containers:
      - name: psql-host
        image: smarman/psqlsample:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_DB
          value: dvdrental
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  name: php-apache
  namespace: psql-scaler
  labels:
    run: php-apache
spec:
  ports:
  - port: 80
  selector:
    run: php-apache
---
apiVersion: v1
kind: Service
metadata:
  name: psql-scaler
  namespace: psql-scaler
  labels:
    run: psql-host
spec:
  ports:
  - port: 5432
  selector:
    run: psql-host
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: psql-scaler
  namespace: psql-scaler
spec:
  scaleTargetRef:
    name: php-apache
  pollingInterval: 1   # Optional. Default: 30 seconds
  cooldownPeriod: 3    # Optional. Default: 300 seconds
  maxReplicaCount: 10  # Optional. Default: 100
  minReplicaCount: 1   # Optional. Default: 0
  triggers:
    - type: postgresql
      metadata:
        connectionFromEnv: PSQL_CONN_STRING ## this value comes from env vars on the scaleTargetRef above
        query: "SELECT COUNT(*) FROM triggers WHERE status='pending';"
        targetQueryValue: "5"
        sslmode: disable