---
apiVersion: v1
kind: Service
metadata:
  name: uptime-kuma-service
  namespace: uptime-kuma
spec:
  # selector tells Kubernetes what Deployment this Service
  # belongs to
  selector:
    app: uptime-kuma
  ports:
  - port: 80
    name: http-port
    targetPort: 3001
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-pv
  namespace: uptime-kuma
spec:
  storageClassName: local-path  # <-- add this
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /data/kuma
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-uptimekuma
  namespace: uptime-kuma
spec:
  storageClassName: local-path  # <-- match PV
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptime-kuma
  namespace: uptime-kuma
spec:
  # using the selector, we will expose the running deployments
  # this is how Kubernetes knows, that a given service belongs to a deployment
  selector:
    matchLabels:
      app: uptime-kuma
  replicas: 1
  template:
    metadata:
      labels:
        app: uptime-kuma
        repo: uptime-kuma
    spec:
      containers:
      - name: uptime-kuma-main
        image: louislam/uptime-kuma:1.22.1
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
        volumeMounts:
        - mountPath: /app/data
          name: uptimekuma-storage-volume
      volumes:
      - name: uptimekuma-storage-volume
        persistentVolumeClaim:
          claimName: efs-uptimekuma
---
apiVersion: v1
kind: Pod
metadata:
  name: report-pod
spec:
  containers:
  - name: reporter
    image: golang:1.20-bullseye
    tty: true
    stdin: true
    command: ["/bin/bash"]
    volumeMounts:
    - name: uptimekuma-storage-volume
      mountPath: /app/data
      readOnly: true
  volumes:
  - name: uptimekuma-storage-volume
    persistentVolumeClaim:
      claimName: efs-uptimekuma
      readOnly: true
